"""
Django settings for main project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
import sys
import dj_database_url
from subprocess import call

if 'DIGITALOCEAN' in os.environ:
    DISABLE_COLLECTSTATIC = '1'

from pathlib import Path
from django.core.management.utils import get_random_secret_key
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', get_random_secret_key())

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'False') == 'True'

ALLOWED_HOSTS = os.getenv('DJANGO_ALLOWED_HOST', '127.0.0.1, localhost').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.template.defaultfilters',
    'producto',
    'compras',
    'usuarios',
    'ventas',
    'ingreso_egreso',
    'django_bootstrap5',#pip install django-bootstrap5
    'crispy_forms', #pip install django-crispy-forms
    'crispy_bootstrap5', #pip install crispy-bootstrap5
    'django_bootstrap_icons',
    'formtools',
    'dbbackup',
    'backup.apps.BackupConfig',
]
CRISPY_ALLOWED_TEMPLATE_PACKS= "bootstrap5"
CRISPY_TEMPLATE_PACK= "bootstrap5"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'main.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['main/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'main.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
DEVELOPMENT_MODE = os.getenv("DEVELOPMENT MODE", "False") == "True" 
if DEVELOPMENT MODE is True: 
    DATABASES = { 
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'jferros',
            'USER': 'root',
            'PASSWORD':'kingkong2950',
            'HOST': '127.0.0.1',
            'PORT': '3306',
        }, 
    }
elif len(sys.argv) and sys.argv[1] != 'collectstatic': 
    if os.getenv("DATABASE_URL", None) is None: 
        raise Exception("DATABASE_URL environment variable not defined") 
    DATABASES = {
        "default": dj_database_url.parse(os.environ.get("DATABASE_URL")),
    } 

# settings.py
BACKUP_ROOT = os.path.join(BASE_DIR, 'backups')
# Opciones de copia de seguridad
DBBACKUP_STORAGE = 'django.core.files.storage.FileSystemStorage'
DBBACKUP_STORAGE_OPTIONS = {'location': os.path.join(BASE_DIR, 'backups')}
DBBACKUP_FILENAME_TEMPLATE = 'CS_{datetime}.{extension}'
DBBACKUP_EXTENSION = 'backup'


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'es'

TIME_ZONE = 'America/Bogota'

USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS= [
    os.path.join(BASE_DIR, "static"),
    ('node_modules', os.path.join(BASE_DIR, 'node_modules')),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.googlemail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'jferrosferrreteria@gmail.com'
EMAIL_HOST_PASSWORD = 'fmvjzcfllwirgxpw'
EMAIL_USE_TLS = True

LOGIN_URL = 'inicio'
LOGIN_REDIRECT_URL = 'index'

#AUTH_USER_MODEL = 'accounts.Register'
